name: Continuous integration

on:
  push:
    branches:
      - develop
      - main
  pull_request:
    branches:
      - develop
      - main

jobs:
  laravel-tests:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_DATABASE: accounting_test
          MYSQL_USER: user
          MYSQL_PASSWORD: secret
          MYSQL_ROOT_PASSWORD: secretroot
        ports:
          - 33306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:

      - name: Git checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@master
        with:
          php-version: '8.1'
          extensions: mbstring, dom, fileinfo, mysql
          coverage: xdebug

      - name: Start mysql service
        run: sudo systemctl start mysql

      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist --no-suggest --optimize-autoloader

      - name: Prepare the application
        run: |
          cp .env.ci .env
          php artisan key:generate

      - name: Check code style
        run: composer run-script php-cs-fixer-check

      - name: Generate key
        run: php artisan key:generate

      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: Clear Config
        run: php artisan config:clear

      - name: Execute tests (Unit and Feature tests) via PHPUnit
        run: composer run-script testdox

      - name: Prepare paths for SonarQube analysis
        run: |
          sed -i "s|$GITHUB_WORKSPACE|/github/workspace|g" phpunit.report.xml
          sed -i "s|$GITHUB_WORKSPACE|/github/workspace|g" phpunit.coverage.xml

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
